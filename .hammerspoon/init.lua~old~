package.path = package.path .. ";" ..  hs.configdir .. "~/.hammerspoon/Spoons/?.spoon/init.lua"

hs.loadSpoon("SpoonInstall")
spoon.SpoonInstall.use_syncinstall = true
Install = spoon.SpoonInstall

Install:andUse("URLDispatcher", {
    config = {
        url_patterns = work_url_patterns,
        default_handler = "com.apple.Safari"
    },
    start = true
})





hs.loadSpoon("HoldToQuit")
spoon.HoldToQuit:init()
spoon.HoldToQuit:start()

-- stackline = require "stackline"
-- stackline:init()

spaces = require("hs._asm.undocumented.spaces")

hhtwm = require('hhtwm')
hhtwm.start()


--
-- Code for Moving the widow

hs.hotkey.bind({"cmd", "alt", "ctrl"}, "H", function()
  local win = hs.window.focusedWindow()
  local f = win:frame()

  f.x = f.x - 10
  win:setFrame(f)
end)


hyper = require('hyper')
require("config")
hyper.start(config)

hyper:bind({}, 'r', nil, function()
    hs.console.hswindow():focus()
end)
hyper:bind({'shift'}, 'r', nil, function()
    hs.reload()
end)


-- Install:andUse("MouseCircle", {
--     hotkeys = {
--         show = {hyper, "d"}
--     }
-- })



-- Tiling Window Manager

require('console').init()
require('overrides').init()

-- ensure IPC is there
hs.ipc.cliInstall()

-- lower logging level for hotkeys
require('hs.hotkey').setLogLevel("warning")

-- global config
config = {
    wm = {
        defaultDisplayLayouts = {
            ['Color LCD'] = 'main-right',
            -- ['DELL U3818DW'] = 'main-center'
        },

        displayLayouts = {
            ['Color LCD'] = {'monocle', 'main-right', 'side-by-side'},
            ['DELL U3818DW'] = {'main-center', 'main-right', 'side-by-side'}
        }
    },

    window = {
        highlightBorder = false,
        highlightMouse = true,
        historyLimit = 0
    },

    network = {
        home = 'Skynet 5G'
    },

    homebridge = {
        studioSpeakers = {
            aid = 10,
            iid = 11,
            name = "Studio Speakers"
        },
        studioLights = {
            aid = 9,
            iid = 11,
            name = "Studio Lights"
        },
        tvLights = {
            aid = 6,
            iid = 11,
            name = "TV Lights"
        }
    }
}


bindings = require('bindings')
controlplane = require('utils.controlplane')
watchables = require('utils.watchables')
watchers = require('utils.watchers')
wm = require('utils.wm')

-- no animations
hs.window.animationDuration = 0.0

-- hints
hs.hints.fontName = 'Helvetica-Bold'
hs.hints.fontSize = 22
hs.hints.hintChars = {'A', 'S', 'D', 'F', 'J', 'K', 'L', 'Q', 'W', 'E', 'R', 'Z', 'X', 'C'}
hs.hints.iconAlpha = 1.0
hs.hints.showTitleThresh = 0

-- controlplane
-- controlplane.enabled = {'autohome', 'automount'}

-- watchers
-- watchers.enabled = {'urlevent'}
-- watchers.urlPreference = config.apps.browsers

-- bindings
bindings.enabled = {
    -- 'ask-before-quit',
    -- 'block-hide',
    -- 'ctrl-esc',
    -- 'f-keys',
    'focus',
    'global',
    'tiling',
    -- 'term-ctrl-i',
}
-- bindings.askBeforeQuitApps = config.apps.browsers

-- start/stop modules
-- local modules = {bindings, controlplane, watchables, watchers, wm}
local modules = {bindings, wm}

hs.fnutils.each(modules, function(module)
    if module then
        module.start()
    end
end)

-- stop modules on shutdown
hs.shutdownCallback = function()
    hs.fnutils.each(modules, function(module)
        if module then
            module.stop()
        end
    end)
end



-- Finally, show a notification that we finished loading the config successfully
hs.notify.new({
    title = 'Hammerspoon',
    informativeText = 'Config loaded'
}):send()
